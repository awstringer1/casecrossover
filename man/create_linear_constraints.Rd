% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01-model-setup.R
\name{create_linear_constraints}
\alias{create_linear_constraints}
\title{Create a linear combination vector for a single-element-zero constraint on a smooth term}
\usage{
create_linear_constraints(u, whichzero)
}
\arguments{
\item{u}{Covariate vector. You can pass it in raw (like data$u) or as a sorted vector of unique values.}

\item{whichzero}{Actual values of u for which you want the random effect to be zero.}
}
\description{
The most common and easiest to interpret constraint on a random walk model for
a smooth term in a case-crossover model is simply to set a single element of the random effect
to zero. This means that effects are interpreted as relative effects compared to this "reference" value.
The reason this is the default constraint, as opposed to the usual "sum-to-zero" constraint used in
random walk models, is because the main advantage of the "sum-to-zero" constraint is that it is
orthogonal to the intercept in the model. In a case-crossover model, the intercept is not estimable,
and while it's still totally possible to use a sum-to-zero constraint, it becomes less clear how
to interpret it.

The function returns a named list of sparseVectors suitable for input into cc_control(). Specifically, the list items
are themselves lists, containing the sorted unique values of your covariate, and a sparseVector
implementing the constraint.
}
\examples{
temperature <- c(10,15,20,25,30,35,40)
create_linear_constraints(temperature,30)
create_linear_constraints(temperature,c(30,35))

}
